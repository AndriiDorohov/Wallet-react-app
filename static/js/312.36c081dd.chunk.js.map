{"version":3,"file":"static/js/312.36c081dd.chunk.js","mappings":"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","sources":["components/Heading/Heading.jsx","components/Inputs/InputWithIcon.styled.js","components/Inputs/InputWithIcon.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport React from 'react';\n\nconst HeadingBase = () => {\n  return <h1>Heading</h1>;\n};\n\n//this heading automaticly changes display depending on width so its always there, but visible only when needed\nexport const Heading = styled(HeadingBase)`\n  display: none;\n  color: var(--font-color-dark);\n  font-size: 30px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.5;\n\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n    display: inline-block;\n  }\n`;\n\n//example ussage for h1,h2 headings <Heading as=\"h1\">Finance App</Heading> <Heading as=\"h2\">Finance App</Heading>\n","import styled from 'styled-components';\nimport { BaseInput } from './BaseInput.styled';\n\nexport const StyledDiv = styled.div`\n  display: inline-block;\n  position: relative;\n  margin-top: 30px;\n\n  ${BaseInput} {\n    padding-left: 54.5px;\n  }\n`;\n\nexport const ErrorMessage = styled.div`\n  position: absolute;\n  top: 30px;\n  left: 0;\n  font-size: 13px;\n  color: var(--color-brand-accent);\n  margin-bottom: 10px;\n`;\n","import styled from 'styled-components';\nimport { BaseInput } from './BaseInput.styled';\nimport { Icon } from '../Icon/Icon';\nimport { useField } from 'formik';\nimport { ErrorMessage, StyledDiv } from './InputWithIcon.styled';\n\nconst InputWithIconBase = ({ icon, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <StyledDiv>\n      <BaseInput {...field} {...props} />\n      <Icon icon={icon} />\n\n      {meta.touched && meta.error ? (\n        <ErrorMessage className=\"error\">{meta.error}</ErrorMessage>\n      ) : null}\n    </StyledDiv>\n  );\n};\n\nexport const InputWithIcon = styled(InputWithIconBase)``;\n","import { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormikForm = styled(Form)`\n  height: 100vh;\n  min-width: 320px;\n  width: 100%;\n  @media screen and (min-height: 767px) {\n    padding: 107px 20px 36px 20px;\n  }\n  padding: 20px 20px 36px 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: var(--background-light);\n  border-radius: 12px;\n\n  & > :first-child {\n    margin-bottom: 30px;\n  }\n\n  & > :nth-last-child(2) {\n    margin-top: 40px;\n  }\n\n  input:-webkit-autofill,\n  input:-webkit-autofill:hover,\n  input:-webkit-autofill:focus {\n    -webkit-box-shadow: 0 0 0px 40rem #ffff inset;\n    box-shadow: 0 0 0px 40rem #ffff inset;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n    @media screen and (min-height: 767px) {\n      width: 533px;\n      padding: 40px 58.5px 62px 65px;\n      height: auto;\n    }\n  }\n`;\n","import React, { useEffect, useRef } from 'react';\nimport { PrimaryButton, SecondaryButton } from '../Buttons/Buttons';\nimport { InputWithIcon } from 'components/Inputs/InputWithIcon';\nimport Logo from 'components/Logo/Logo';\nimport { Formik } from 'formik';\nimport { object, string } from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../redux/slices/sessionSlice';\nimport { FormikForm } from './LoginForm.styled';\nimport { motion, AnimatePresence } from 'framer-motion';\nconst LoginForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isAuth = useSelector(state => state.session.isAuth);\n  const loginButtonRef = useRef(null);\n\n  useEffect(() => {\n    if (isAuth) {\n      navigate('/home');\n    }\n  }, [isAuth, navigate]);\n\n  const handleLogin = values => {\n    dispatch(login({ email: values.email, password: values.password }));\n  };\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    try {\n      await handleLogin(values);\n      loginButtonRef.current.focus();\n    } catch (error) {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        transition={{ duration: 0.6, ease: [0.08, 0.82, 0.17, 1] }}\n      >\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          validationSchema={object({\n            email: string().email('Invalid email address.').required('Please provide your email.'),\n            password: string().required('No password provided.'),\n          })}\n          onSubmit={handleSubmit}\n          validateOnMount\n        >\n          {({ handleBlur }) => (\n            <FormikForm autoComplete=\"off\">\n              <Logo />\n              <InputWithIcon\n                icon=\"icon__baseline-email\"\n                placeholder=\"E-mail\"\n                title=\"Please fill out your e-mail\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"off\"\n                onKeyUp={handleBlur}\n              />\n              <InputWithIcon\n                icon=\"icon__baseline-lock\"\n                placeholder=\"Password\"\n                title=\"The password must have at least 6 and max 12 characters\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"off\"\n                onKeyUp={handleBlur}\n              />\n              <PrimaryButton type=\"submit\" ref={loginButtonRef}>\n                LOG IN\n              </PrimaryButton>\n              <SecondaryButton type=\"button\" onClick={() => navigate('/register')}>\n                REGISTER\n              </SecondaryButton>\n            </FormikForm>\n          )}\n        </Formik>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\nexport default LoginForm;\n","import styled from 'styled-components';\nimport { Heading } from '../../components/Heading/Heading';\nimport { motion } from 'framer-motion';\nexport const LoginPageContainer = styled.div`\n  @media screen and (min-height: 767px) {\n    @media (max-width: ${props => props.theme.breakpoints.tabletForMaxMedia}) {\n      form {\n        padding-bottom: 107px;\n      }\n    }\n\n    @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n      max-width: 538px;\n      display: flex;\n      flex-direction: column;\n      margin: 0 auto;\n    }\n\n    @media (min-width: ${props => props.theme.breakpoints.desktop}) {\n      width: 100vw;\n      max-width: 100vw;\n      height: 100vh;\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      margin: 0;\n    }\n\n    ${Heading} {\n      margin: 0 40px 0 0;\n\n      @media (min-width: ${props => props.theme.breakpoints.desktop}) {\n        margin: 28px 0 0 0;\n      }\n    }\n  }\n`;\n\nexport const LoginHeaderContainer = styled(motion.div)`\n  display: none;\n  @media screen and (min-height: 767px) {\n    @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      margin-top: 60px;\n      margin-bottom: 50px;\n\n      svg {\n        width: 260px;\n        height: 250px;\n      }\n    }\n\n    @media (min-width: ${props => props.theme.breakpoints.desktop}) {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      margin: 0;\n      padding-right: 38px;\n\n      svg {\n        width: 435px;\n        height: 420px;\n      }\n    }\n  }\n`;\n\nexport const LoginFormContainer = styled.div`\n  @media screen and (min-height: 767px) {\n    @media (min-width: ${props => props.theme.breakpoints.desktop}) {\n      display: flex;\n      align-items: center;\n      position: relative;\n    }\n\n    &::after {\n      @media (min-width: ${props => props.theme.breakpoints.desktop}) {\n        content: '';\n        position: fixed;\n        z-index: -1;\n        width: 100vw;\n        height: 100vh;\n        background-color: var(--something);\n        backdrop-filter: blur(10px);\n      }\n    }\n\n    form {\n      @media (max-width: ${props => props.theme.breakpoints.tabletForMaxMedia}) {\n        border-radius: 0px;\n      }\n\n      @media (min-width: ${props => props.theme.breakpoints.desktop}) {\n        margin-left: 107px;\n      }\n    }\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport { Icon } from '../../components/Icon/Icon';\nimport { LoginFormContainer, LoginHeaderContainer, LoginPageContainer } from './LoginPage.styled';\nimport { Heading } from '../../components/Heading/Heading';\nconst LoginPage = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth > 767);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth > 1279);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [windowWidth]);\n  return (\n    <>\n      <LoginPageContainer>\n        <LoginHeaderContainer\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.6, ease: [0.08, 0.82, 0.17, 1] }}\n        >\n          {windowWidth ? (\n            <Icon className=\"loginIcon\" icon=\"icon__big-logo-man1\" />\n          ) : (\n            <Icon className=\"loginIcon\" icon=\"icon__big-logo-man2\" />\n          )}\n          <Heading as=\"h1\">Finance App</Heading>\n        </LoginHeaderContainer>{' '}\n        <LoginFormContainer>\n          <LoginForm />\n        </LoginFormContainer>\n      </LoginPageContainer>\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Heading","styled","HeadingBase","_jsx","children","_templateObject","_taggedTemplateLiteral","props","theme","breakpoints","tablet","StyledDiv","div","BaseInput","ErrorMessage","_templateObject2","InputWithIcon","_ref","icon","field","meta","useField","_jsxs","Icon","touched","error","className","FormikForm","Form","LoginForm","navigate","useNavigate","dispatch","useDispatch","isAuth","useSelector","state","session","loginButtonRef","useRef","useEffect","AnimatePresence","motion","initial","opacity","animate","exit","transition","duration","ease","Formik","initialValues","email","password","validationSchema","object","string","required","onSubmit","async","values","setSubmitting","resetForm","login","handleLogin","current","focus","validateOnMount","_ref2","handleBlur","autoComplete","Logo","placeholder","title","name","type","onKeyUp","PrimaryButton","ref","SecondaryButton","onClick","LoginPageContainer","tabletForMaxMedia","desktop","LoginHeaderContainer","LoginFormContainer","_templateObject3","LoginPage","windowWidth","setWindowWidth","useState","window","innerWidth","handleResize","addEventListener","removeEventListener","_Fragment","as"],"sourceRoot":""}